# –ü—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç
param(
    [string]$ProjectPath = ".",
    [int]$MinLines = 400
)

Write-Host "üó∫Ô∏è –ì–ï–ù–ï–†–ê–¢–û–† –ù–ê–í–ò–ì–ê–¶–ò–û–ù–ù–´–• –ö–ê–†–¢ HEYS" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan

$extensions = @('.js', '.html', '.css', '.ts')
$largeFiles = Get-ChildItem -Path $ProjectPath -Recurse -File | Where-Object {
    $_.Extension -in $extensions -and
    $_.Name -notlike "*.min.*" -and
    $_.Directory.Name -ne "node_modules"
} | ForEach-Object {
    $lineCount = (Get-Content $_.FullName | Measure-Object -Line).Lines
    if ($lineCount -ge $MinLines) {
        [PSCustomObject]@{
            Name = $_.Name
            Path = $_.FullName
            Lines = $lineCount
            Size = [math]::Round($_.Length / 1KB, 1)
        }
    }
} | Sort-Object Lines -Descending

Write-Host "`nüìä –ù–ê–ô–î–ï–ù–ù–´–ï –ë–û–õ–¨–®–ò–ï –§–ê–ô–õ–´:" -ForegroundColor Green
$largeFiles | Format-Table Name, Lines, Size -AutoSize

Write-Host "`n–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤: $($largeFiles.Count)" -ForegroundColor Yellow

foreach ($file in $largeFiles) {
    Write-Host "`nüìÑ $($file.Name) - $($file.Lines) —Å—Ç—Ä–æ–∫" -ForegroundColor Cyan
    
    # –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    $content = Get-Content $file.Path -Raw
    
    # –ü–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π
    $functions = [regex]::Matches($content, 'function\s+(\w+)') | ForEach-Object {
        $lineIndex = ($content.Substring(0, $_.Index) -split "`n").Count
        "$($_.Groups[1].Value) (—Å—Ç—Ä–æ–∫–∞ $lineIndex)"
    }
    
    # –ü–æ–∏—Å–∫ –∫–ª–∞—Å—Å–æ–≤
    $classes = [regex]::Matches($content, 'class\s+(\w+)') | ForEach-Object {
        $lineIndex = ($content.Substring(0, $_.Index) -split "`n").Count
        "$($_.Groups[1].Value) (—Å—Ç—Ä–æ–∫–∞ $lineIndex)"
    }
    
    if ($functions.Count -gt 0) {
        Write-Host "  ‚öôÔ∏è –§—É–Ω–∫—Ü–∏–∏: $($functions.Count)" -ForegroundColor Green
        $functions | Select-Object -First 5 | ForEach-Object { Write-Host "    - $_" -ForegroundColor Gray }
    }
    
    if ($classes.Count -gt 0) {
        Write-Host "  üì¶ –ö–ª–∞—Å—Å—ã: $($classes.Count)" -ForegroundColor Green
        $classes | ForEach-Object { Write-Host "    - $_" -ForegroundColor Gray }
    }
}
}
