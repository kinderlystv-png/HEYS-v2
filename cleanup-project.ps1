# PowerShell —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ HEYS
Write-Host "üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Green

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..." -ForegroundColor Yellow
$tempFiles = @(
    "123123.json",
    "error-report-*.json", 
    "metrics.json",
    "debug-exports.js",
    "diagnostic-console-script.js", 
    "filter-fix-test-script.js",
    "quick-diagnostic-script.js",
    "enhanced-error-logger-diagnostics.html",
    "test-comprehensive-fixes.html", 
    "test-error-logging.html",
    ".eslintrc.test.js"
)

foreach ($file in $tempFiles) {
    if (Test-Path $file) {
        Remove-Item $file -Force
        Write-Host "‚úÖ –£–¥–∞–ª–µ–Ω: $file" -ForegroundColor Gray
    }
}

# –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π
Write-Host "üßΩ –û—á–∏—â–∞–µ–º –∫—ç—à–∏..." -ForegroundColor Yellow
if (Test-Path ".turbo/daemon") { Remove-Item ".turbo/daemon" -Recurse -Force }
if (Test-Path "test-results") { Remove-Item "test-results" -Recurse -Force }
if (Test-Path "dist") { Remove-Item "dist" -Recurse -Force }

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Å—Ç–∞—Ä—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
Write-Host "üì¶ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –æ—Ç—á–µ—Ç—ã..." -ForegroundColor Yellow
$archiveDir = "archive/reports-$(Get-Date -Format 'yyyyMMdd')"
New-Item -ItemType Directory -Path $archiveDir -Force | Out-Null

$reportFiles = Get-ChildItem -Name "PHASE_*.md", "STATUS_DASHBOARD*.md", "COMPREHENSIVE_STATUS*.md" -ErrorAction SilentlyContinue
foreach ($file in $reportFiles) {
    if (Test-Path $file) {
        Move-Item $file $archiveDir -Force
        Write-Host "üìÅ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω: $file" -ForegroundColor Gray
    }
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "üìä –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ 100MB –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞" -ForegroundColor Cyan

# –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
$projectSize = (Get-ChildItem -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
Write-Host "üìè –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: $([math]::Round($projectSize, 2)) MB" -ForegroundColor Blue
