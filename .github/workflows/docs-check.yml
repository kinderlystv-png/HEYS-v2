name: Documentation Quality Check

on:
  pull_request:
    paths:
      - "docs/**"
  push:
    branches:
      - main
      - develop

jobs:
  docs-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for hardcoded versions
        run: |
          echo "Checking for hardcoded version patterns..."
          if grep -R --include='*.md' -nE '(v[0-9]+\.[0-9]+)' docs/; then
            echo "❌ Found hardcoded versions. Use {{version}} placeholder instead."
            exit 1
          else
            echo "✅ No hardcoded versions found"
          fi

      - name: Check for version placeholder usage
        run: |
          echo "Checking version placeholder consistency..."
          TRACKER_VERSION=$(grep 'version:' docs/.update_tracker.yml | cut -d' ' -f2)
          echo "Current version: $TRACKER_VERSION"

      - name: Check for duplicate "Next Steps" sections
        run: |
          echo "Checking for duplicate 'Next Steps' sections..."
          NEXT_STEPS_COUNT=$(grep -R --include='*.md' -l 'Следующие шаги\|Next [Ss]teps' docs/ | grep -v NEXT_STEPS.md | wc -l)
          if [ "$NEXT_STEPS_COUNT" -gt 0 ]; then
            echo "❌ Found duplicate 'Next Steps' sections in:"
            grep -R --include='*.md' -l 'Следующие шаги\|Next [Ss]teps' docs/ | grep -v NEXT_STEPS.md
            echo "Move them to docs/plans/NEXT_STEPS.md"
            exit 1
          else
            echo "✅ No duplicate 'Next Steps' sections found"
          fi

      - name: Install dependencies
        run: |
          npm install -g markdownlint-cli
          npm install -g markdown-link-check
          npm install -g jest

      - name: Run unit tests
        run: |
          echo "Running DependencyResolver tests..."
          npm test -- --testPathPattern=dependencyResolver

      - name: Run markdownlint
        run: markdownlint docs/**/*.md --config .markdownlint.json

      - name: Check links
        run: |
          find docs -name "*.md" -exec markdown-link-check {} \;
