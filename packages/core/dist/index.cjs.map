{"version":3,"sources":["../src/models/user.ts","../src/models/food.ts","../src/models/training.ts","../src/services/nutrition.ts","../src/services/analytics.ts","../src/services/storage.ts","../src/secure.ts","../src/legacy/index.ts"],"names":["z","UserSchema","UserDraftSchema","createUser","draft","now","FoodProductSchema","FoodEntrySchema","calculateNutrition","product","amount","ratio","ExerciseSchema","WorkoutSetSchema","WorkoutSessionSchema","TrainingProgramSchema","NutritionService","data","options","proteinMultiplier","carbMultiplier","fatMultiplier","totalCalories","AnalyticsService","provider","name","properties","event","promises","error","userId","traits","StorageService","defaultValidator","ValidationSchemas","SecurityError","HeysUser","userData","updateData","_query","HeysDay","dayData","dayId","HeysSession","sessionData","token","SecureUserManager","validation","idValidation","dataValidation","query","SecureDayManager","daySchema","content","SecureSessionManager","sessionSchema","SecureHeysCore","config","configValidation","request","sanitizedRequest","pathParts","secureCore"],"mappings":"AACA,OAAS,KAAAA,MAAS,MAGX,IAAMC,EAAaD,EAAE,OAAO,CACjC,GAAIA,EAAE,OAAO,EACb,MAAOA,EAAE,OAAO,EAAE,MAAM,EACxB,KAAMA,EAAE,OAAO,EACf,QAASA,EACN,OAAO,CACN,IAAKA,EAAE,OAAO,EAAE,SAAS,EACzB,OAAQA,EAAE,KAAK,CAAC,OAAQ,SAAU,OAAO,CAAC,EAAE,SAAS,EACrD,OAAQA,EAAE,OAAO,EAAE,SAAS,EAC5B,OAAQA,EAAE,OAAO,EAAE,SAAS,EAC5B,cAAeA,EAAE,KAAK,CAAC,YAAa,QAAS,WAAY,SAAU,aAAa,CAAC,EAAE,SAAS,CAC9F,CAAC,EACA,SAAS,EACZ,YAAaA,EACV,OAAO,CACN,MAAOA,EAAE,KAAK,CAAC,SAAU,UAAU,CAAC,EAAE,QAAQ,QAAQ,EACtD,SAAUA,EAAE,KAAK,CAAC,KAAM,IAAI,CAAC,EAAE,QAAQ,IAAI,EAC3C,MAAOA,EAAE,KAAK,CAAC,QAAS,OAAQ,MAAM,CAAC,EAAE,QAAQ,MAAM,CACzD,CAAC,EACA,QAAQ,CAAC,CAAC,EACb,UAAWA,EAAE,KAAK,EAClB,UAAWA,EAAE,KAAK,CACpB,CAAC,EAKYE,EAAkBD,EAAW,QAAQ,EAAE,KAAK,CACvD,GAAI,GACJ,UAAW,GACX,UAAW,EACb,CAAC,EAIYE,EAAcC,GAA2B,CACpD,IAAMC,EAAM,IAAI,KAChB,MAAO,CACL,GAAI,OAAO,WAAW,EACtB,MAAOD,EAAM,MACb,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,YAAaA,EAAM,aAAe,CAChC,MAAO,SACP,SAAU,KACV,MAAO,MACT,EACA,UAAWC,EACX,UAAWA,CACb,CACF,ECrDA,OAAS,KAAAL,MAAS,MAGX,IAAMM,EAAoBN,EAAE,OAAO,CACxC,GAAIA,EAAE,OAAO,EACb,KAAMA,EAAE,OAAO,EACf,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,SAAUA,EAAE,OAAO,EACnB,UAAWA,EAAE,OAAO,CAClB,SAAUA,EAAE,OAAO,EACnB,QAASA,EAAE,OAAO,EAClB,MAAOA,EAAE,OAAO,EAChB,IAAKA,EAAE,OAAO,EACd,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,OAAQA,EAAE,OAAO,EAAE,SAAS,CAC9B,CAAC,EACD,QAASA,EAAE,OAAO,CAChB,OAAQA,EAAE,OAAO,EACjB,KAAMA,EAAE,KAAK,CAAC,IAAK,KAAM,QAAS,MAAO,OAAQ,KAAK,CAAC,CACzD,CAAC,EACD,UAAWA,EAAE,KAAK,EAClB,UAAWA,EAAE,KAAK,CACpB,CAAC,EAKYO,EAAkBP,EAAE,OAAO,CACtC,GAAIA,EAAE,OAAO,EACb,OAAQA,EAAE,OAAO,EACjB,UAAWA,EAAE,OAAO,EACpB,OAAQA,EAAE,OAAO,EACjB,KAAMA,EAAE,OAAO,EACf,KAAMA,EAAE,KAAK,EACb,KAAMA,EAAE,KAAK,CAAC,YAAa,QAAS,SAAU,OAAO,CAAC,EACtD,UAAWA,EAAE,KAAK,CACpB,CAAC,EAKYQ,EAAqB,CAChCC,EACAC,IAC6B,CAC7B,IAAMC,EAAQD,EAASD,EAAQ,QAAQ,OACvC,MAAO,CACL,SAAU,KAAK,MAAMA,EAAQ,UAAU,SAAWE,EAAQ,EAAE,EAAI,GAChE,QAAS,KAAK,MAAMF,EAAQ,UAAU,QAAUE,EAAQ,EAAE,EAAI,GAC9D,MAAO,KAAK,MAAMF,EAAQ,UAAU,MAAQE,EAAQ,EAAE,EAAI,GAC1D,IAAK,KAAK,MAAMF,EAAQ,UAAU,IAAME,EAAQ,EAAE,EAAI,GACtD,MAAOF,EAAQ,UAAU,MACrB,KAAK,MAAMA,EAAQ,UAAU,MAAQE,EAAQ,EAAE,EAAI,GACnD,OACJ,MAAOF,EAAQ,UAAU,MACrB,KAAK,MAAMA,EAAQ,UAAU,MAAQE,EAAQ,EAAE,EAAI,GACnD,OACJ,OAAQF,EAAQ,UAAU,OACtB,KAAK,MAAMA,EAAQ,UAAU,OAASE,EAAQ,EAAE,EAAI,GACpD,MACN,CACF,EC9DA,OAAS,KAAAX,MAAS,MAGX,IAAMY,EAAiBZ,EAAE,OAAO,CACrC,GAAIA,EAAE,OAAO,EACb,KAAMA,EAAE,OAAO,EACf,SAAUA,EAAE,KAAK,CAAC,WAAY,SAAU,cAAe,UAAW,OAAO,CAAC,EAC1E,aAAcA,EAAE,MAAMA,EAAE,OAAO,CAAC,EAChC,UAAWA,EAAE,OAAO,EAAE,SAAS,EAC/B,aAAcA,EAAE,OAAO,EAAE,SAAS,EAClC,WAAYA,EAAE,KAAK,CAAC,WAAY,eAAgB,UAAU,CAAC,CAC7D,CAAC,EAKYa,EAAmBb,EAAE,OAAO,CACvC,WAAYA,EAAE,OAAO,EACrB,KAAMA,EAAE,OAAO,EAAE,SAAS,EAC1B,OAAQA,EAAE,OAAO,EAAE,SAAS,EAC5B,SAAUA,EAAE,OAAO,EAAE,SAAS,EAC9B,SAAUA,EAAE,OAAO,EAAE,SAAS,EAC9B,KAAMA,EAAE,OAAO,EAAE,SAAS,CAC5B,CAAC,EAKYc,EAAuBd,EAAE,OAAO,CAC3C,GAAIA,EAAE,OAAO,EACb,OAAQA,EAAE,OAAO,EACjB,KAAMA,EAAE,OAAO,EACf,KAAMA,EAAE,KAAK,EACb,KAAMA,EAAE,MAAMa,CAAgB,EAC9B,MAAOb,EAAE,OAAO,EAAE,SAAS,EAC3B,SAAUA,EAAE,OAAO,EACnB,UAAWA,EAAE,KAAK,CACpB,CAAC,EAKYe,EAAwBf,EAAE,OAAO,CAC5C,GAAIA,EAAE,OAAO,EACb,KAAMA,EAAE,OAAO,EACf,YAAaA,EAAE,OAAO,EACtB,SAAUA,EAAE,OAAO,EACnB,SAAUA,EAAE,MACVA,EAAE,OAAO,CACP,KAAMA,EAAE,OAAO,EACf,UAAWA,EAAE,MACXA,EAAE,OAAO,CACP,WAAYA,EAAE,OAAO,EACrB,KAAMA,EAAE,OAAO,EACf,KAAMA,EAAE,OAAO,EACf,OAAQA,EAAE,OAAO,EAAE,SAAS,CAC9B,CAAC,CACH,CACF,CAAC,CACH,EACA,MAAOA,EAAE,KAAK,CAAC,WAAY,eAAgB,UAAU,CAAC,EACtD,UAAWA,EAAE,KAAK,CACpB,CAAC,ECjDM,IAAMgB,EAAN,KAAuB,CAC5B,OAAwB,oBAAsB,CAC5C,SAAU,EACV,MAAO,EACP,KAAM,CACR,EAEA,OAAO,kBACLC,EACAC,EAAqC,CAAC,EAC9B,CACR,GAAM,CACJ,kBAAAC,EAAoB,KAAK,oBAAoB,SAC7C,eAAAC,EAAiB,KAAK,oBAAoB,MAC1C,cAAAC,EAAgB,KAAK,oBAAoB,IAC3C,EAAIH,EAEJ,OACED,EAAK,SAAWE,EAChBF,EAAK,MAAQG,EACbH,EAAK,KAAOI,CAEhB,CAEA,OAAO,oBAAoBJ,EAIzB,CACA,IAAMK,EAAgB,KAAK,kBAAkBL,CAAI,EAEjD,OAAIK,IAAkB,EACb,CAAE,gBAAiB,EAAG,aAAc,EAAG,YAAa,CAAE,EAGxD,CACL,gBAAiB,KAAK,MAAOL,EAAK,SAAW,EAAIK,EAAiB,GAAG,EACrE,aAAc,KAAK,MAAOL,EAAK,MAAQ,EAAIK,EAAiB,GAAG,EAC/D,YAAa,KAAK,MAAOL,EAAK,KAAO,EAAIK,EAAiB,GAAG,CAC/D,CACF,CAEA,OAAO,sBAAsBL,EAA8B,CACzD,OACE,OAAOA,EAAK,UAAa,UAAYA,EAAK,UAAY,GACtD,OAAOA,EAAK,OAAU,UAAYA,EAAK,OAAS,GAChD,OAAOA,EAAK,MAAS,UAAYA,EAAK,MAAQ,IAC7CA,EAAK,SAAW,QAAc,OAAOA,EAAK,QAAW,UAAYA,EAAK,OAAS,EAEpF,CACF,EClDO,IAAMM,EAAN,KAAuB,CACpB,UAAiC,CAAC,EAClC,WAA+B,CAAC,EAChC,OACA,UAER,aAAc,CACZ,KAAK,UAAY,KAAK,kBAAkB,CAC1C,CAEA,YAAYC,EAAmC,CAC7C,KAAK,UAAU,KAAKA,CAAQ,CAC9B,CAEA,MAAM,MAAMC,EAAcC,EAAiD,CACzE,IAAMC,EAAwB,CAC5B,KAAAF,EACA,UAAW,KAAK,IAAI,EACpB,UAAW,KAAK,SAClB,EAEIC,IACFC,EAAM,WAAaD,GAGjB,KAAK,SACPC,EAAM,OAAS,KAAK,QAGtB,KAAK,WAAW,KAAKA,CAAK,EAG1B,IAAMC,EAAW,KAAK,UAAU,IAAIJ,GAClCA,EAAS,MAAMG,CAAK,EAAE,MAAME,GAAM,EAElC,CACF,EAEA,MAAM,QAAQ,WAAWD,CAAQ,CACnC,CAEA,MAAM,SAASE,EAAgBC,EAA6C,CAC1E,KAAK,OAASD,EAEd,IAAMF,EAAW,KAAK,UAAU,IAAIJ,GAClCA,EAAS,SAASM,EAAQC,CAAM,EAAE,MAAMF,GAAM,EAE9C,CACF,EAEA,MAAM,QAAQ,WAAWD,CAAQ,CACnC,CAEA,eAAkC,CAChC,MAAO,CAAC,GAAG,KAAK,UAAU,CAC5B,CAEA,iBAAwB,CACtB,KAAK,WAAa,CAAC,CACrB,CAEQ,mBAA4B,CAClC,MAAO,WAAW,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,EACzE,CACF,EC7EO,IAAMI,EAAiB,CAC5B,KAAM,IAAM,QAAQ,QAAQ,EAC5B,KAAM,IAAM,QAAQ,QAAQ,IAAI,CAClC,ECKA,OAAS,oBAAAC,EAAkB,qBAAAC,EAAmB,iBAAAC,MAAqB,eCA5D,IAAMC,EAAN,KAAe,CACpB,MAAM,WAAWC,EAA6B,CAE5C,MAAO,CAAE,GAAI,KAAK,WAAW,EAAG,GAAGA,CAAS,CAC9C,CAEA,MAAM,WAAWP,EAAgBQ,EAA+B,CAE9D,MAAO,CAAE,GAAIR,EAAQ,GAAGQ,CAAW,CACrC,CAEA,MAAM,YAAYC,EAAgC,CAEhD,MAAO,CAAC,CACV,CAEQ,YAAqB,CAC3B,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAC/C,CACF,EAEaC,EAAN,KAAc,CACnB,MAAM,UAAUC,EAA4B,CAE1C,MAAO,CAAE,GAAI,KAAK,WAAW,EAAG,GAAGA,CAAQ,CAC7C,CAEA,MAAM,UAAUC,EAAeJ,EAA+B,CAE5D,MAAO,CAAE,GAAII,EAAO,GAAGJ,CAAW,CACpC,CAEA,MAAM,cAAcI,EAA6B,CAE/C,MAAO,CAAE,GAAIA,EAAO,QAAS,gBAAiB,CAChD,CAEQ,YAAqB,CAC3B,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAC/C,CACF,EAEaC,EAAN,KAAkB,CACvB,MAAM,cAAcC,EAAgC,CAElD,MAAO,CACL,GAAI,KAAK,WAAW,EACpB,MAAO,KAAK,cAAc,EAC1B,GAAGA,CACL,CACF,CAEA,MAAM,qBAAqBC,EAAiC,CAE1D,MAAO,GAAQA,GAASA,EAAM,OAAS,GACzC,CAEQ,YAAqB,CAC3B,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAC/C,CAEQ,eAAwB,CAC9B,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,EAAE,CAChD,CACF,ED1DO,IAAMC,EAAN,cAAgCV,CAAS,CAI9C,MAAM,WAAWC,EAAiC,CAChD,IAAMU,EAAa,MAAMd,EAAiB,eACxCI,EACAH,EAAkB,KAClB,CAAE,SAAU,GAAM,WAAY,EAAK,CACrC,EAEA,GAAI,CAACa,EAAW,QACd,MAAM,IAAIZ,EAAc,yBAA0BY,EAAW,MAAM,EAGrE,OAAO,MAAM,WAAWA,EAAW,WAAaV,CAAQ,CAC1D,CAKA,MAAM,WAAWP,EAAgBQ,EAAmC,CAElE,IAAMU,EAAe,MAAMf,EAAiB,eAC1CH,EACAI,EAAkB,KAAK,MAAM,EAC/B,EAEA,GAAI,CAACc,EAAa,QAChB,MAAM,IAAIb,EAAc,kBAAmBa,EAAa,MAAM,EAIhE,IAAMC,EAAiB,MAAMhB,EAAiB,eAC5CK,EACAJ,EAAkB,KAAK,QAAQ,EAC/B,CAAE,SAAU,GAAM,WAAY,EAAK,CACrC,EAEA,GAAI,CAACe,EAAe,QAClB,MAAM,IAAId,EAAc,gCAAiCc,EAAe,MAAM,EAGhF,OAAO,MAAM,WAAWnB,EAAQmB,EAAe,WAAaX,CAAU,CACxE,CAKA,MAAM,YAAYY,EAAgC,CAChD,IAAMH,EAAad,EAAiB,cAAciB,EAAO,OAAQ,CAC/D,SAAU,GACV,SAAU,EACZ,CAAC,EAED,GAAI,CAACH,EAAW,QACd,MAAM,IAAIZ,EAAc,iCAAkCY,EAAW,MAAM,EAG7E,OAAO,MAAM,YAAYA,EAAW,WAAaG,CAAK,CACxD,CACF,EAKaC,EAAN,cAA+BX,CAAQ,CAI5C,MAAM,UAAUC,EAAgC,CAE9C,IAAMW,EAAYlB,EAAkB,QAAQ,OAAO,CACjD,KAAMA,EAAkB,KAAK,MAAM,UACnC,OAAQA,EAAkB,KAAK,MAAM,EACvC,CAAC,EAEKa,EAAa,MAAMd,EAAiB,eACxCQ,EACAW,EACA,CAAE,SAAU,GAAM,WAAY,EAAK,CACrC,EAEA,GAAI,CAACL,EAAW,QACd,MAAM,IAAIZ,EAAc,6BAA8BY,EAAW,MAAM,EAGzE,OAAO,MAAM,UAAUA,EAAW,WAAaN,CAAO,CACxD,CAKA,MAAM,UAAUC,EAAeJ,EAAmC,CAChE,IAAMS,EAAa,MAAMd,EAAiB,eACxCK,EACAJ,EAAkB,QAAQ,QAAQ,EAClC,CAAE,SAAU,GAAM,WAAY,EAAK,CACrC,EAEA,GAAI,CAACa,EAAW,QACd,MAAM,IAAIZ,EAAc,+BAAgCY,EAAW,MAAM,EAG3E,OAAO,MAAM,UAAUL,EAAOK,EAAW,WAAaT,CAAU,CAClE,CAKA,MAAM,cAAcI,EAA6B,CAC/C,IAAMW,EAAU,MAAM,MAAM,cAAcX,CAAK,EAE/C,OAAIW,GAAW,OAAOA,GAAY,WAEb,MAAMpB,EAAiB,eACxCoB,EACAnB,EAAkB,QAClB,CAAE,SAAU,EAAK,CACnB,GAEkB,WAAamB,CAInC,CACF,EAKaC,EAAN,cAAmCX,CAAY,CAIpD,MAAM,cAAcC,EAAoC,CACtD,IAAMW,EAAgBrB,EAAkB,KAAK,KAAK,CAChD,GAAI,GACJ,MAAO,EACT,CAAC,EAAE,OAAO,CACR,MAAOA,EAAkB,WAAW,MAAM,QAC1C,UAAWA,EAAkB,KAAK,MAAM,SAC1C,CAAC,EAEKa,EAAa,MAAMd,EAAiB,eACxCW,EACAW,EACA,CAAE,SAAU,GAAM,WAAY,EAAK,CACrC,EAEA,GAAI,CAACR,EAAW,QACd,MAAM,IAAIZ,EAAc,4BAA6BY,EAAW,MAAM,EAGxE,OAAO,MAAM,cAAcA,EAAW,WAAaH,CAAW,CAChE,CAKA,MAAM,qBAAqBC,EAAkC,CAC3D,IAAME,EAAad,EAAiB,cAAcY,EAAO,OAAQ,CAC/D,SAAU,GACV,SAAU,EACZ,CAAC,EAED,OAAKE,EAAW,QAIT,MAAM,qBAAqBA,EAAW,WAAaF,CAAK,EAHtD,EAIX,CACF,EAKaW,EAAN,KAAqB,CACV,MACA,KACA,SAEhB,aAAc,CACZ,KAAK,MAAQ,IAAIV,EACjB,KAAK,KAAO,IAAIK,EAChB,KAAK,SAAW,IAAIG,CACtB,CAKA,MAAM,WAAWG,EAAkB,CAAC,EAAkB,CACpD,IAAMC,EAAmB,MAAMzB,EAAiB,eAC9CwB,EACAvB,EAAkB,WAAW,MAAM,MAAQ,CAAC,EAC5C,CAAE,SAAU,EAAK,CACnB,EAEA,GAAI,CAACwB,EAAiB,QACpB,MAAM,IAAIvB,EAAc,kCAAmCuB,EAAiB,MAAM,EAIpF,MAAM,QAAQ,IAAI,CAElB,CAAC,CACH,CAKA,MAAM,iBAAiBC,EAAgC,CACrD,IAAMZ,EAAa,MAAMd,EAAiB,eACxC0B,EACAzB,EAAkB,WAClB,CAAE,SAAU,GAAM,WAAY,EAAK,CACrC,EAEA,GAAI,CAACa,EAAW,QACd,MAAM,IAAIZ,EAAc,gCAAiCY,EAAW,MAAM,EAG5E,IAAMa,EAAmBb,EAAW,UAGpC,OAAQa,EAAiB,OAAQ,CAC/B,IAAK,MACH,OAAO,KAAK,iBAAiBA,CAAgB,EAC/C,IAAK,OACH,OAAO,KAAK,kBAAkBA,CAAgB,EAChD,IAAK,MACH,OAAO,KAAK,iBAAiBA,CAAgB,EAC/C,IAAK,SACH,OAAO,KAAK,oBAAoBA,CAAgB,EAClD,QACE,MAAM,IAAIzB,EAAc,0BAA2B,CAAC,CAAC,CACzD,CACF,CAEA,MAAc,iBAAiBwB,EAA4B,CAEzD,GAAIA,EAAQ,KAAK,WAAW,QAAQ,EAClC,OAAO,KAAK,MAAM,YAAYA,EAAQ,OAAO,GAAK,EAAE,EAEtD,GAAIA,EAAQ,KAAK,WAAW,OAAO,EACjC,OAAO,KAAK,KAAK,cAAcA,EAAQ,OAAO,EAAE,EAElD,MAAM,IAAIxB,EAAc,uBAAwB,CAAC,CAAC,CACpD,CAEA,MAAc,kBAAkBwB,EAA4B,CAE1D,GAAIA,EAAQ,OAAS,SACnB,OAAO,KAAK,MAAM,WAAWA,EAAQ,IAAI,EAE3C,GAAIA,EAAQ,OAAS,QACnB,OAAO,KAAK,KAAK,UAAUA,EAAQ,IAAI,EAEzC,GAAIA,EAAQ,OAAS,YACnB,OAAO,KAAK,SAAS,cAAcA,EAAQ,IAAI,EAEjD,MAAM,IAAIxB,EAAc,wBAAyB,CAAC,CAAC,CACrD,CAEA,MAAc,iBAAiBwB,EAA4B,CAEzD,IAAME,EAAYF,EAAQ,KAAK,MAAM,GAAG,EACxC,GAAIE,EAAU,CAAC,IAAM,SAAWA,EAAU,CAAC,EACzC,OAAO,KAAK,MAAM,WAAWA,EAAU,CAAC,EAAGF,EAAQ,IAAI,EAEzD,GAAIE,EAAU,CAAC,IAAM,QAAUA,EAAU,CAAC,EACxC,OAAO,KAAK,KAAK,UAAUA,EAAU,CAAC,EAAGF,EAAQ,IAAI,EAEvD,MAAM,IAAIxB,EAAc,uBAAwB,CAAC,CAAC,CACpD,CAEA,MAAc,oBAAoBwB,EAA4B,CAI5D,MAAKA,EAAQ,SAAS,cAKhB,IAAIxB,EAAc,oCAAqC,CAAC,CAAC,EAJvD,IAAIA,EAAc,+CAAgD,CAAC,CAAC,CAK9E,CACF,EAKa2B,EAAa,IAAIN","sourcesContent":["// User Model - Migrated from legacy heys_user_v12.ts\nimport { z } from 'zod';\n\n// User Schema\nexport const UserSchema = z.object({\n  id: z.string(),\n  email: z.string().email(),\n  name: z.string(),\n  profile: z\n    .object({\n      age: z.number().optional(),\n      gender: z.enum(['male', 'female', 'other']).optional(),\n      weight: z.number().optional(),\n      height: z.number().optional(),\n      activityLevel: z.enum(['sedentary', 'light', 'moderate', 'active', 'very-active']).optional(),\n    })\n    .optional(),\n  preferences: z\n    .object({\n      units: z.enum(['metric', 'imperial']).default('metric'),\n      language: z.enum(['en', 'ru']).default('en'),\n      theme: z.enum(['light', 'dark', 'auto']).default('auto'),\n    })\n    .default({}),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport type User = z.infer<typeof UserSchema>;\n\n// User Draft for forms\nexport const UserDraftSchema = UserSchema.partial().omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\nexport type UserDraft = z.infer<typeof UserDraftSchema>;\n\n// User utilities\nexport const createUser = (draft: UserDraft): User => {\n  const now = new Date();\n  return {\n    id: crypto.randomUUID(),\n    email: draft.email!,\n    name: draft.name!,\n    profile: draft.profile,\n    preferences: draft.preferences || {\n      units: 'metric',\n      language: 'en',\n      theme: 'auto',\n    },\n    createdAt: now,\n    updatedAt: now,\n  };\n};\n","// Food and Nutrition Models - Migrated from legacy core\nimport { z } from 'zod';\n\n// Food Product Schema\nexport const FoodProductSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  brand: z.string().optional(),\n  category: z.string(),\n  nutrition: z.object({\n    calories: z.number(),\n    protein: z.number(),\n    carbs: z.number(),\n    fat: z.number(),\n    fiber: z.number().optional(),\n    sugar: z.number().optional(),\n    sodium: z.number().optional(),\n  }),\n  perUnit: z.object({\n    amount: z.number(),\n    unit: z.enum(['g', 'ml', 'piece', 'cup', 'tbsp', 'tsp']),\n  }),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport type FoodProduct = z.infer<typeof FoodProductSchema>;\n\n// Food Entry Schema (diary entry)\nexport const FoodEntrySchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  productId: z.string(),\n  amount: z.number(),\n  unit: z.string(),\n  date: z.date(),\n  meal: z.enum(['breakfast', 'lunch', 'dinner', 'snack']),\n  createdAt: z.date(),\n});\n\nexport type FoodEntry = z.infer<typeof FoodEntrySchema>;\n\n// Nutrition calculations\nexport const calculateNutrition = (\n  product: FoodProduct,\n  amount: number\n): FoodProduct['nutrition'] => {\n  const ratio = amount / product.perUnit.amount;\n  return {\n    calories: Math.round(product.nutrition.calories * ratio * 10) / 10,\n    protein: Math.round(product.nutrition.protein * ratio * 10) / 10,\n    carbs: Math.round(product.nutrition.carbs * ratio * 10) / 10,\n    fat: Math.round(product.nutrition.fat * ratio * 10) / 10,\n    fiber: product.nutrition.fiber\n      ? Math.round(product.nutrition.fiber * ratio * 10) / 10\n      : undefined,\n    sugar: product.nutrition.sugar\n      ? Math.round(product.nutrition.sugar * ratio * 10) / 10\n      : undefined,\n    sodium: product.nutrition.sodium\n      ? Math.round(product.nutrition.sodium * ratio * 10) / 10\n      : undefined,\n  };\n};\n","// Training Models - New structure for workout management\nimport { z } from 'zod';\n\n// Exercise Schema\nexport const ExerciseSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  category: z.enum(['strength', 'cardio', 'flexibility', 'balance', 'sport']),\n  muscleGroups: z.array(z.string()),\n  equipment: z.string().optional(),\n  instructions: z.string().optional(),\n  difficulty: z.enum(['beginner', 'intermediate', 'advanced']),\n});\n\nexport type Exercise = z.infer<typeof ExerciseSchema>;\n\n// Workout Set Schema\nexport const WorkoutSetSchema = z.object({\n  exerciseId: z.string(),\n  reps: z.number().optional(),\n  weight: z.number().optional(),\n  duration: z.number().optional(), // in seconds\n  distance: z.number().optional(), // in meters\n  rest: z.number().optional(), // rest time in seconds\n});\n\nexport type WorkoutSet = z.infer<typeof WorkoutSetSchema>;\n\n// Workout Session Schema\nexport const WorkoutSessionSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  name: z.string(),\n  date: z.date(),\n  sets: z.array(WorkoutSetSchema),\n  notes: z.string().optional(),\n  duration: z.number(), // total workout duration in seconds\n  createdAt: z.date(),\n});\n\nexport type WorkoutSession = z.infer<typeof WorkoutSessionSchema>;\n\n// Training Program Schema\nexport const TrainingProgramSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string(),\n  duration: z.number(), // program duration in weeks\n  sessions: z.array(\n    z.object({\n      name: z.string(),\n      exercises: z.array(\n        z.object({\n          exerciseId: z.string(),\n          sets: z.number(),\n          reps: z.string(), // e.g., \"8-12\", \"30 sec\"\n          weight: z.string().optional(), // e.g., \"bodyweight\", \"60% 1RM\"\n        })\n      ),\n    })\n  ),\n  level: z.enum(['beginner', 'intermediate', 'advanced']),\n  createdAt: z.date(),\n});\n\nexport type TrainingProgram = z.infer<typeof TrainingProgramSchema>;\n","// Nutrition service\r\nexport interface NutritionData {\r\n  proteins: number; // g\r\n  carbs: number; // g\r\n  fats: number; // g\r\n  weight?: number; // g\r\n}\r\n\r\nexport interface CalorieCalculationOptions {\r\n  proteinMultiplier?: number; // kcal/g (default: 4)\r\n  carbMultiplier?: number; // kcal/g (default: 4)\r\n  fatMultiplier?: number; // kcal/g (default: 9)\r\n}\r\n\r\nexport class NutritionService {\r\n  private static readonly DEFAULT_MULTIPLIERS = {\r\n    proteins: 4,\r\n    carbs: 4,\r\n    fats: 9,\r\n  };\r\n\r\n  static calculateCalories(\r\n    data: NutritionData,\r\n    options: CalorieCalculationOptions = {}\r\n  ): number {\r\n    const {\r\n      proteinMultiplier = this.DEFAULT_MULTIPLIERS.proteins,\r\n      carbMultiplier = this.DEFAULT_MULTIPLIERS.carbs,\r\n      fatMultiplier = this.DEFAULT_MULTIPLIERS.fats,\r\n    } = options;\r\n\r\n    return (\r\n      data.proteins * proteinMultiplier +\r\n      data.carbs * carbMultiplier +\r\n      data.fats * fatMultiplier\r\n    );\r\n  }\r\n\r\n  static calculateMacroRatio(data: NutritionData): {\r\n    proteinsPercent: number;\r\n    carbsPercent: number;\r\n    fatsPercent: number;\r\n  } {\r\n    const totalCalories = this.calculateCalories(data);\r\n    \r\n    if (totalCalories === 0) {\r\n      return { proteinsPercent: 0, carbsPercent: 0, fatsPercent: 0 };\r\n    }\r\n\r\n    return {\r\n      proteinsPercent: Math.round((data.proteins * 4 / totalCalories) * 100),\r\n      carbsPercent: Math.round((data.carbs * 4 / totalCalories) * 100),\r\n      fatsPercent: Math.round((data.fats * 9 / totalCalories) * 100),\r\n    };\r\n  }\r\n\r\n  static validateNutritionData(data: NutritionData): boolean {\r\n    return (\r\n      typeof data.proteins === 'number' && data.proteins >= 0 &&\r\n      typeof data.carbs === 'number' && data.carbs >= 0 &&\r\n      typeof data.fats === 'number' && data.fats >= 0 &&\r\n      (data.weight === undefined || (typeof data.weight === 'number' && data.weight > 0))\r\n    );\r\n  }\r\n}\r\n","// Analytics service\r\nexport interface AnalyticsEvent {\r\n  name: string;\r\n  properties?: Record<string, any>;\r\n  timestamp?: number;\r\n  userId?: string;\r\n  sessionId?: string;\r\n}\r\n\r\nexport interface AnalyticsProvider {\r\n  track(event: AnalyticsEvent): Promise<void>;\r\n  identify(userId: string, traits?: Record<string, any>): Promise<void>;\r\n}\r\n\r\nexport class AnalyticsService {\r\n  private providers: AnalyticsProvider[] = [];\r\n  private eventQueue: AnalyticsEvent[] = [];\r\n  private userId?: string;\r\n  private sessionId: string;\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId();\r\n  }\r\n\r\n  addProvider(provider: AnalyticsProvider): void {\r\n    this.providers.push(provider);\r\n  }\r\n\r\n  async track(name: string, properties?: Record<string, any>): Promise<void> {\r\n    const event: AnalyticsEvent = {\r\n      name,\r\n      timestamp: Date.now(),\r\n      sessionId: this.sessionId,\r\n    };\r\n\r\n    if (properties) {\r\n      event.properties = properties;\r\n    }\r\n\r\n    if (this.userId) {\r\n      event.userId = this.userId;\r\n    }\r\n\r\n    this.eventQueue.push(event);\r\n\r\n    // Send to all providers\r\n    const promises = this.providers.map(provider => \r\n      provider.track(event).catch(error => \r\n        console.error('Analytics provider error:', error)\r\n      )\r\n    );\r\n\r\n    await Promise.allSettled(promises);\r\n  }\r\n\r\n  async identify(userId: string, traits?: Record<string, any>): Promise<void> {\r\n    this.userId = userId;\r\n\r\n    const promises = this.providers.map(provider =>\r\n      provider.identify(userId, traits).catch(error =>\r\n        console.error('Analytics identify error:', error)\r\n      )\r\n    );\r\n\r\n    await Promise.allSettled(promises);\r\n  }\r\n\r\n  getEventQueue(): AnalyticsEvent[] {\r\n    return [...this.eventQueue];\r\n  }\r\n\r\n  clearEventQueue(): void {\r\n    this.eventQueue = [];\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n}\r\n","// Storage service placeholder\nexport const StorageService = {\n  save: () => Promise.resolve(),\n  load: () => Promise.resolve(null),\n};\n","/**\r\n * HEYS Security-Enhanced Core Module v1.4\r\n * Core functionality with built-in security validation\r\n * \r\n * @author HEYS Team\r\n * @version 1.4.0\r\n * @created 2025-01-31\r\n */\r\n\r\nimport { defaultValidator, ValidationSchemas, SecurityError } from '@heys/shared';\r\nimport { HeysUser, HeysDay, HeysSession } from './legacy/index';\r\n\r\n/**\r\n * Security-enhanced user manager\r\n */\r\nexport class SecureUserManager extends HeysUser {\r\n  /**\r\n   * Create user with security validation\r\n   */\r\n  async createUser(userData: unknown): Promise<any> {\r\n    const validation = await defaultValidator.validateSchema(\r\n      userData,\r\n      ValidationSchemas.user,\r\n      { sanitize: true, strictMode: true }\r\n    );\r\n\r\n    if (!validation.isValid) {\r\n      throw new SecurityError('User validation failed', validation.errors);\r\n    }\r\n\r\n    return super.createUser(validation.sanitized || userData);\r\n  }\r\n\r\n  /**\r\n   * Update user with security validation\r\n   */\r\n  async updateUser(userId: string, updateData: unknown): Promise<any> {\r\n    // Validate user ID\r\n    const idValidation = await defaultValidator.validateSchema(\r\n      userId,\r\n      ValidationSchemas.user.shape.id\r\n    );\r\n\r\n    if (!idValidation.isValid) {\r\n      throw new SecurityError('Invalid user ID', idValidation.errors);\r\n    }\r\n\r\n    // Validate update data\r\n    const dataValidation = await defaultValidator.validateSchema(\r\n      updateData,\r\n      ValidationSchemas.user.partial(),\r\n      { sanitize: true, strictMode: true }\r\n    );\r\n\r\n    if (!dataValidation.isValid) {\r\n      throw new SecurityError('Update data validation failed', dataValidation.errors);\r\n    }\r\n\r\n    return super.updateUser(userId, dataValidation.sanitized || updateData);\r\n  }\r\n\r\n  /**\r\n   * Search users with input sanitization\r\n   */\r\n  async searchUsers(query: unknown): Promise<any[]> {\r\n    const validation = defaultValidator.validateInput(query, 'text', { \r\n      sanitize: true, \r\n      required: true \r\n    });\r\n\r\n    if (!validation.isValid) {\r\n      throw new SecurityError('Search query validation failed', validation.errors);\r\n    }\r\n\r\n    return super.searchUsers(validation.sanitized || query);\r\n  }\r\n}\r\n\r\n/**\r\n * Security-enhanced day manager\r\n */\r\nexport class SecureDayManager extends HeysDay {\r\n  /**\r\n   * Create day entry with validation\r\n   */\r\n  async createDay(dayData: unknown): Promise<any> {\r\n    // Create dynamic schema for day data\r\n    const daySchema = ValidationSchemas.content.extend({\r\n      date: ValidationSchemas.user.shape.createdAt,\r\n      userId: ValidationSchemas.user.shape.id,\r\n    });\r\n\r\n    const validation = await defaultValidator.validateSchema(\r\n      dayData,\r\n      daySchema,\r\n      { sanitize: true, strictMode: true }\r\n    );\r\n\r\n    if (!validation.isValid) {\r\n      throw new SecurityError('Day data validation failed', validation.errors);\r\n    }\r\n\r\n    return super.createDay(validation.sanitized || dayData);\r\n  }\r\n\r\n  /**\r\n   * Update day with security validation\r\n   */\r\n  async updateDay(dayId: string, updateData: unknown): Promise<any> {\r\n    const validation = await defaultValidator.validateSchema(\r\n      updateData,\r\n      ValidationSchemas.content.partial(),\r\n      { sanitize: true, strictMode: true }\r\n    );\r\n\r\n    if (!validation.isValid) {\r\n      throw new SecurityError('Day update validation failed', validation.errors);\r\n    }\r\n\r\n    return super.updateDay(dayId, validation.sanitized || updateData);\r\n  }\r\n\r\n  /**\r\n   * Get day content with XSS protection\r\n   */\r\n  async getDayContent(dayId: string): Promise<any> {\r\n    const content = await super.getDayContent(dayId);\r\n    \r\n    if (content && typeof content === 'object') {\r\n      // Sanitize content before returning\r\n      const validation = await defaultValidator.validateSchema(\r\n        content,\r\n        ValidationSchemas.content,\r\n        { sanitize: true }\r\n      );\r\n\r\n      return validation.sanitized || content;\r\n    }\r\n\r\n    return content;\r\n  }\r\n}\r\n\r\n/**\r\n * Security-enhanced session manager\r\n */\r\nexport class SecureSessionManager extends HeysSession {\r\n  /**\r\n   * Create session with security validation\r\n   */\r\n  async createSession(sessionData: unknown): Promise<any> {\r\n    const sessionSchema = ValidationSchemas.user.pick({\r\n      id: true,\r\n      email: true,\r\n    }).extend({\r\n      token: ValidationSchemas.apiRequest.shape.headers,\r\n      expiresAt: ValidationSchemas.user.shape.createdAt,\r\n    });\r\n\r\n    const validation = await defaultValidator.validateSchema(\r\n      sessionData,\r\n      sessionSchema,\r\n      { sanitize: true, strictMode: true }\r\n    );\r\n\r\n    if (!validation.isValid) {\r\n      throw new SecurityError('Session validation failed', validation.errors);\r\n    }\r\n\r\n    return super.createSession(validation.sanitized || sessionData);\r\n  }\r\n\r\n  /**\r\n   * Validate session token\r\n   */\r\n  async validateSessionToken(token: unknown): Promise<boolean> {\r\n    const validation = defaultValidator.validateInput(token, 'text', {\r\n      required: true,\r\n      sanitize: true\r\n    });\r\n\r\n    if (!validation.isValid) {\r\n      return false;\r\n    }\r\n\r\n    return super.validateSessionToken(validation.sanitized || token);\r\n  }\r\n}\r\n\r\n/**\r\n * Main secure core manager\r\n */\r\nexport class SecureHeysCore {\r\n  public readonly users: SecureUserManager;\r\n  public readonly days: SecureDayManager;\r\n  public readonly sessions: SecureSessionManager;\r\n\r\n  constructor() {\r\n    this.users = new SecureUserManager();\r\n    this.days = new SecureDayManager();\r\n    this.sessions = new SecureSessionManager();\r\n  }\r\n\r\n  /**\r\n   * Initialize with security checks\r\n   */\r\n  async initialize(config: unknown = {}): Promise<void> {\r\n    const configValidation = await defaultValidator.validateSchema(\r\n      config,\r\n      ValidationSchemas.apiRequest.shape.body || {},\r\n      { sanitize: true }\r\n    );\r\n\r\n    if (!configValidation.isValid) {\r\n      throw new SecurityError('Configuration validation failed', configValidation.errors);\r\n    }\r\n\r\n    // Initialize core modules with validated config\r\n    await Promise.all([\r\n      // Legacy classes don't have initialize methods, so we skip them\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Secure API endpoint handler\r\n   */\r\n  async handleApiRequest(request: unknown): Promise<any> {\r\n    const validation = await defaultValidator.validateSchema(\r\n      request,\r\n      ValidationSchemas.apiRequest,\r\n      { sanitize: true, strictMode: true }\r\n    );\r\n\r\n    if (!validation.isValid) {\r\n      throw new SecurityError('API request validation failed', validation.errors);\r\n    }\r\n\r\n    const sanitizedRequest = validation.sanitized as any;\r\n\r\n    // Route request based on method and path\r\n    switch (sanitizedRequest.method) {\r\n      case 'GET':\r\n        return this.handleGetRequest(sanitizedRequest);\r\n      case 'POST':\r\n        return this.handlePostRequest(sanitizedRequest);\r\n      case 'PUT':\r\n        return this.handlePutRequest(sanitizedRequest);\r\n      case 'DELETE':\r\n        return this.handleDeleteRequest(sanitizedRequest);\r\n      default:\r\n        throw new SecurityError('Unsupported HTTP method', []);\r\n    }\r\n  }\r\n\r\n  private async handleGetRequest(request: any): Promise<any> {\r\n    // Handle GET requests with path routing\r\n    if (request.path.startsWith('/users')) {\r\n      return this.users.searchUsers(request.query?.q || '');\r\n    }\r\n    if (request.path.startsWith('/days')) {\r\n      return this.days.getDayContent(request.query?.id);\r\n    }\r\n    throw new SecurityError('Unknown GET endpoint', []);\r\n  }\r\n\r\n  private async handlePostRequest(request: any): Promise<any> {\r\n    // Handle POST requests\r\n    if (request.path === '/users') {\r\n      return this.users.createUser(request.body);\r\n    }\r\n    if (request.path === '/days') {\r\n      return this.days.createDay(request.body);\r\n    }\r\n    if (request.path === '/sessions') {\r\n      return this.sessions.createSession(request.body);\r\n    }\r\n    throw new SecurityError('Unknown POST endpoint', []);\r\n  }\r\n\r\n  private async handlePutRequest(request: any): Promise<any> {\r\n    // Handle PUT requests\r\n    const pathParts = request.path.split('/');\r\n    if (pathParts[1] === 'users' && pathParts[2]) {\r\n      return this.users.updateUser(pathParts[2], request.body);\r\n    }\r\n    if (pathParts[1] === 'days' && pathParts[2]) {\r\n      return this.days.updateDay(pathParts[2], request.body);\r\n    }\r\n    throw new SecurityError('Unknown PUT endpoint', []);\r\n  }\r\n\r\n  private async handleDeleteRequest(request: any): Promise<any> {\r\n    // Handle DELETE requests with security checks\r\n    \r\n    // Validate that user has permission to delete\r\n    if (!request.headers?.authorization) {\r\n      throw new SecurityError('Authorization required for DELETE operations', []);\r\n    }\r\n\r\n    // Additional DELETE logic would go here\r\n    throw new SecurityError('DELETE operations not implemented', []);\r\n  }\r\n}\r\n\r\n/**\r\n * Default secure core instance\r\n */\r\nexport const secureCore = new SecureHeysCore();\r\n","/**\r\n * HEYS Legacy Exports for Core Package\r\n * Provides compatibility layer for v1.2 components\r\n */\r\n\r\n// Note: Legacy core will be exported separately\r\n// export { default as HeysCore } from './heys_core_v12';\r\n\r\n// Temporary compatibility classes for security integration\r\nexport class HeysUser {\r\n  async createUser(userData: any): Promise<any> {\r\n    // Legacy user creation logic\r\n    return { id: this.generateId(), ...userData };\r\n  }\r\n\r\n  async updateUser(userId: string, updateData: any): Promise<any> {\r\n    // Legacy user update logic\r\n    return { id: userId, ...updateData };\r\n  }\r\n\r\n  async searchUsers(_query: string): Promise<any[]> {\r\n    // Legacy user search logic\r\n    return [];\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n\r\nexport class HeysDay {\r\n  async createDay(dayData: any): Promise<any> {\r\n    // Legacy day creation logic\r\n    return { id: this.generateId(), ...dayData };\r\n  }\r\n\r\n  async updateDay(dayId: string, updateData: any): Promise<any> {\r\n    // Legacy day update logic\r\n    return { id: dayId, ...updateData };\r\n  }\r\n\r\n  async getDayContent(dayId: string): Promise<any> {\r\n    // Legacy day content retrieval\r\n    return { id: dayId, content: 'sample content' };\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n\r\nexport class HeysSession {\r\n  async createSession(sessionData: any): Promise<any> {\r\n    // Legacy session creation logic\r\n    return { \r\n      id: this.generateId(), \r\n      token: this.generateToken(),\r\n      ...sessionData \r\n    };\r\n  }\r\n\r\n  async validateSessionToken(token: string): Promise<boolean> {\r\n    // Legacy token validation\r\n    return Boolean(token && token.length > 10);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  private generateToken(): string {\r\n    return Math.random().toString(36).substr(2, 32);\r\n  }\r\n}\r\n"]}