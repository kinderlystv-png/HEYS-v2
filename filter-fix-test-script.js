// üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –§–ò–õ–¨–¢–†–û–í ENHANCED ERROR LOGGING
// –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å Dashboard

console.log('üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –§–ò–õ–¨–¢–†–û–í');
console.log('============================');

if (!window.errorDashboard || !window.enhancedLogger) {
  console.log('‚ùå Dashboard –∏–ª–∏ Logger –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
} else {
  const dashboard = window.errorDashboard;
  const logger = window.enhancedLogger;

  console.log('üìä –ò–°–•–û–î–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
  console.log(`   üìã –õ–æ–≥–æ–≤ –≤ Logger: ${logger.logs?.length || 0}`);
  console.log(`   üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Logger:`, logger.getStats());
  console.log(`   üéõÔ∏è –§–∏–ª—å—Ç—Ä—ã Dashboard:`, dashboard.filters);

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤
  console.log('\nüîÑ –¢–ï–°–¢ –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò –§–ò–õ–¨–¢–†–û–í:');
  const originalFilters = dashboard.filters;
  const convertedFilters = dashboard.convertFiltersForLogger(originalFilters);

  console.log(`   üì• –ò—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:`, originalFilters);
  console.log(`   üì§ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:`, convertedFilters);

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
  console.log('\nüîç –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –õ–û–ì–û–í:');

  const allLogs = logger.getLogs();
  const emptyFilterLogs = logger.getLogs({});
  const originalFilterLogs = logger.getLogs(originalFilters);
  const convertedFilterLogs = logger.getLogs(convertedFilters);

  console.log(`   üìã getLogs(): ${allLogs.length} –ª–æ–≥–æ–≤`);
  console.log(`   üìã getLogs({}): ${emptyFilterLogs.length} –ª–æ–≥–æ–≤`);
  console.log(`   üìã getLogs(originalFilters): ${originalFilterLogs.length} –ª–æ–≥–æ–≤`);
  console.log(`   üìã getLogs(convertedFilters): ${convertedFilterLogs.length} –ª–æ–≥–æ–≤`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä
  if (convertedFilters.since) {
    const now = Date.now();
    const sinceTime = convertedFilters.since;
    const hoursDiff = (now - sinceTime) / (1000 * 60 * 60);
    console.log(
      `   ‚è∞ –§–∏–ª—å—Ç—Ä –≤—Ä–µ–º–µ–Ω–∏: since ${new Date(sinceTime).toLocaleTimeString()} (${hoursDiff.toFixed(1)}h ago)`
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º timestamps –ª–æ–≥–æ–≤
    if (logger.logs.length > 0) {
      console.log('   üìÖ Timestamps –ª–æ–≥–æ–≤:');
      logger.logs.forEach((log, i) => {
        const age = (now - log.timestamp) / (1000 * 60);
        const tooOld = log.timestamp < sinceTime;
        console.log(
          `     ${i + 1}. ${new Date(log.timestamp).toLocaleTimeString()} (${age.toFixed(1)}m ago) ${tooOld ? '‚ùå TOO OLD' : '‚úÖ OK'}`
        );
      });
    }
  }

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–æ–≥ –¥–ª—è —Ç–µ—Å—Ç–∞
  console.log('\nüß™ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –õ–û–ì–ê:');
  logger.logInfo('Filter Test Log', {
    source: 'filter_test',
    timestamp: Date.now(),
  });

  // –ü–æ–≤—Ç–æ—Ä—è–µ–º —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–∞
  console.log('\nüîÑ –ü–û–í–¢–û–†–ù–´–ô –¢–ï–°–¢ –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø –õ–û–ì–ê:');
  const newAllLogs = logger.getLogs();
  const newConvertedFilterLogs = logger.getLogs(convertedFilters);

  console.log(
    `   üìã getLogs(): ${newAllLogs.length} –ª–æ–≥–æ–≤ (+${newAllLogs.length - allLogs.length})`
  );
  console.log(
    `   üìã getLogs(convertedFilters): ${newConvertedFilterLogs.length} –ª–æ–≥–æ–≤ (+${newConvertedFilterLogs.length - convertedFilterLogs.length})`
  );

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç
  console.log('\nüì§ –¢–ï–°–¢ –≠–ö–°–ü–û–†–¢–ê:');
  console.log('   üéØ –ó–∞–ø—É—Å–∫–∞–µ–º dashboard.exportReport()...');

  // –ò–º–∏—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç –±–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
  const activeLogger = dashboard.logger || window.enhancedLogger;
  const exportAllLogs = activeLogger.getLogs ? activeLogger.getLogs() : [];
  const exportConvertedFilters = dashboard.convertFiltersForLogger(dashboard.filters);
  const exportFilteredLogs = activeLogger.getLogs
    ? activeLogger.getLogs(exportConvertedFilters)
    : [];

  console.log(`   üìä –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –ª–æ–≥–æ–≤: ${exportAllLogs.length}`);
  console.log(`   üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö: ${exportFilteredLogs.length}`);

  if (exportAllLogs.length === 0 && logger.getStats().total > 0) {
    console.warn('‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏, –Ω–æ —ç–∫—Å–ø–æ—Ä—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤!');
  } else {
    console.log('‚úÖ –≠–∫—Å–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  }
}

console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù');
